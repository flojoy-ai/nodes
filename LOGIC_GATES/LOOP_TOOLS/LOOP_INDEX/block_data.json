{
  "description": "A loop index in Flojoy starts at 1 and increases by 1 for each loop.",
  "parameters": [
    {
      "name": "loop_node",
      "type": "str",
      "description": "The LOOP node to track the loop index from."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "Scalar",
      "description": "The loop index in Scalar form."
    }
  ],
  "code": "from flojoy import (\n    flojoy,\n    Scalar,\n    OrderedPair,\n    SmallMemory,\n    NodeReference,\n)\nfrom typing import Optional\n\n\nmemory_key = \"LOOP_INDEX\"\n\n\n@flojoy\ndef LOOP_INDEX(\n    loop_node: NodeReference,\n    default: Optional[OrderedPair | Scalar] = None,\n) -> Scalar:\n    \"\"\"The LOOP_INDEX node loads the loop index from the LOOP node.\n\n    A loop index in Flojoy starts at 1 and increases by 1 for each loop.\n\n    Parameters\n    ----------\n    loop_node : str\n        The LOOP node to track the loop index from.\n\n    Returns\n    -------\n    Scalar\n        The loop index in Scalar form.\n    \"\"\"\n\n    ref_loop_node = loop_node.unwrap()\n\n    if ref_loop_node == \"\" or \"LOOP\" not in ref_loop_node:\n        raise ValueError(\"A LOOP node id must be given.\")\n\n    loop_info = SmallMemory().read_memory(ref_loop_node, \"loop-info\")\n    if loop_info is None:\n        c = 1\n    else:\n        c = loop_info.get(\"current_iteration\")\n\n    return Scalar(c=float(c))\n"
}