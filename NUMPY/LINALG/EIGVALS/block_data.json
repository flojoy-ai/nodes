{
  "description": "The description of that function is as follows:\n\n    Compute the eigenvalues of a general matrix.\n\nMain difference between `eigvals` and `eig`: the eigenvectors are not returned.",
  "parameters": [
    {
      "name": "a",
      "type": "(..., M, M) array_like",
      "description": "A complex- or real-valued matrix whose eigenvalues will be computed."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataContainer",
      "description": "type 'ordered pair', 'scalar', or 'matrix'"
    }
  ],
  "code": "from flojoy import flojoy, Matrix, Scalar\nimport numpy as np\nfrom collections import namedtuple\nfrom typing import Literal\n\nimport numpy.linalg\n\n\n@flojoy\ndef EIGVALS(\n    default: Matrix,\n) -> Matrix | Scalar:\n    \"\"\"The EIGVALS node is based on a numpy or scipy function.\n\n    The description of that function is as follows:\n\n        Compute the eigenvalues of a general matrix.\n\n    Main difference between `eigvals` and `eig`: the eigenvectors are not returned.\n\n    Parameters\n    ----------\n    a : (..., M, M) array_like\n        A complex- or real-valued matrix whose eigenvalues will be computed.\n\n    Returns\n    -------\n    DataContainer\n        type 'ordered pair', 'scalar', or 'matrix'\n    \"\"\"\n\n    result = numpy.linalg.eigvals(\n        a=default.m,\n    )\n\n    if isinstance(result, np.ndarray):\n        result = Matrix(m=result)\n    else:\n        assert isinstance(\n            result, np.number | float | int\n        ), f\"Expected np.number, float or int for result, got {type(result)}\"\n        result = Scalar(c=float(result))\n\n    return result\n"
}