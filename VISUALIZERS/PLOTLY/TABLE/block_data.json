{
  "description": "Inputs\n------\ndefault : OrderedTriple|OrderedPair|DataFrame|Vector|Scalar\n    the DataContainer to be visualized",
  "parameters": [],
  "returns": [
    {
      "name": null,
      "type": "Plotly",
      "description": "the DataContainer containing the Plotly Table visualization"
    }
  ],
  "code": "from flojoy import flojoy, OrderedPair, OrderedTriple, DataFrame, Vector, Scalar, Plotly\nimport plotly.graph_objects as go\nimport pandas as pd\nfrom nodes.VISUALIZERS.template import plot_layout\n\n\n@flojoy\ndef TABLE(default: OrderedTriple | OrderedPair | DataFrame | Vector) -> Plotly:\n    \"\"\"The TABLE node creates a Plotly Table visualization for a given input DataContainer.\n\n    Inputs\n    ------\n    default : OrderedTriple|OrderedPair|DataFrame|Vector|Scalar\n        the DataContainer to be visualized\n\n    Returns\n    -------\n    Plotly\n        the DataContainer containing the Plotly Table visualization\n    \"\"\"\n\n    layout = plot_layout(title=\"TABLE\")\n    fig = go.Figure(layout=layout)\n\n    match default:\n        case OrderedPair():\n            x = default.x\n            y = default.y\n            fig.add_trace(\n                go.Table(\n                    header=dict(values=[\"x\", \"y\"], align=\"center\"),\n                    cells=dict(values=[x, y], align=\"center\"),\n                )\n            )\n        case OrderedTriple():\n            x = default.x\n            y = default.y\n            z = default.z\n            fig.add_trace(\n                go.Table(\n                    header=dict(values=[\"x\", \"y\", \"z\"], align=\"center\"),\n                    cells=dict(values=[x, y, z], align=\"center\"),\n                )\n            )\n        case Vector():\n            v = default.v\n            fig.add_trace(\n                go.Table(\n                    header=dict(values=[\"v\"], align=\"center\"),\n                    cells=dict(values=[v], align=\"center\"),\n                )\n            )\n        case Scalar():\n            c = default.c\n            fig.add_trace(\n                go.Table(\n                    header=dict(\n                        values=[\"Scalar\"],\n                        align=\"center\",\n                        font=dict(size=1),\n                        height=0,\n                    ),\n                    cells=dict(\n                        values=[[c]],\n                        align=\"center\",\n                        font=dict(size=25),\n                    ),\n                )\n            )\n        case DataFrame():\n            df = pd.DataFrame(default.m)\n            fig.add_trace(\n                go.Table(\n                    header=dict(values=list(df.columns), align=\"center\"),\n                    cells=dict(\n                        values=[df[col] for col in df.columns],\n                        align=\"center\",\n                    ),\n                )\n            )\n    return Plotly(fig=fig)\n"
}