{
  "description": "Inputs\n------\ndefault : OrderedTriple|DataFrame\n    the DataContainer to be visualized",
  "parameters": [],
  "returns": [
    {
      "name": null,
      "type": "Plotly",
      "description": "the DataContainer containing the Plotly 3D Scatter visualization"
    }
  ],
  "code": "import plotly.graph_objects as go\nimport plotly.express as px\nfrom flojoy import OrderedTriple, DataFrame, Plotly, flojoy\nfrom nodes.VISUALIZERS.template import plot_layout\n\n\n@flojoy\ndef SCATTER3D(default: OrderedTriple | DataFrame) -> Plotly:\n    \"\"\"The SCATTER3D node creates a Plotly 3D Scatter visualization for a given input DataContainer.\n\n    Inputs\n    ------\n    default : OrderedTriple|DataFrame\n        the DataContainer to be visualized\n\n    Returns\n    -------\n    Plotly\n        the DataContainer containing the Plotly 3D Scatter visualization\n    \"\"\"\n\n    layout = plot_layout(title=\"SCATTER3D\")\n    fig = go.Figure(layout=layout)\n    match default:\n        case OrderedTriple():\n            x = default.x\n            if isinstance(default.x, dict):\n                dict_keys = list(default.x.keys())\n                x = default.x[dict_keys[0]]\n            y = default.y\n            z = default.z\n            fig.add_trace(go.Scatter3d(x=x, y=y, z=z, mode=\"markers\"))\n        case DataFrame():\n            df = default.m\n            if len(df.columns) < 3:\n                raise ValueError(\n                    \"DataFrame must have at least 3 columns for x, y, and z coordinates.\"\n                )\n\n            x_column = df.columns[0]\n            y_column = df.columns[1]\n            z_column = df.columns[2]\n\n            fig = px.scatter_3d(df, x=x_column, y=y_column, z=z_column, color=z_column)\n\n    return Plotly(fig=fig)\n"
}