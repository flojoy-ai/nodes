{
  "description": "Inputs\n------\ndata : DataFrame\n    The input dataframe containing the categorical features.",
  "parameters": [
    {
      "name": "feature_col",
      "type": "DataFrame",
      "description": "A dataframe whose columns are used to create the one hot encoding.\nFor example, if 'data' has columns ['a', 'b', 'c'] and 'feature_col' has columns ['a', 'b'],\nthen the one hot encoding will be created only for columns ['a', 'b'] against 'data'.\nDefaults to None, meaning that all columns of categorizable objects are encoded."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataFrame",
      "description": "The one hot encoding of the input features."
    }
  ],
  "code": "from flojoy import flojoy, DataFrame\nfrom typing import Optional\nimport pandas as pd\n\n\n@flojoy\ndef ONE_HOT_ENCODING(\n    data: DataFrame,\n    feature_col: Optional[DataFrame] = None,\n) -> DataFrame:\n    \"\"\"The ONE_HOT_ENCODING node creates a one hot encoding from a dataframe containing categorical features.\n\n    Inputs\n    ------\n    data : DataFrame\n        The input dataframe containing the categorical features.\n\n    Parameters\n    ----------\n    feature_col: DataFrame, optional\n        A dataframe whose columns are used to create the one hot encoding.\n        For example, if 'data' has columns ['a', 'b', 'c'] and 'feature_col' has columns ['a', 'b'],\n        then the one hot encoding will be created only for columns ['a', 'b'] against 'data'.\n        Defaults to None, meaning that all columns of categorizable objects are encoded.\n\n    Returns\n    -------\n    DataFrame\n        The one hot encoding of the input features.\n    \"\"\"\n\n    df = data.m\n    if feature_col:\n        encoded = pd.get_dummies(df, columns=feature_col.m.columns.to_list())\n\n    else:\n        cat_df = df.select_dtypes(include=[\"object\", \"category\"]).columns.to_list()\n        encoded = pd.get_dummies(df, columns=cat_df)\n\n    return DataFrame(df=encoded)\n"
}