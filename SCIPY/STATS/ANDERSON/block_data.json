{
  "description": "The description of that function is as follows:\n\n    Anderson-Darling test for data coming from a particular distribution.\n\n    The Anderson-Darling test tests the null hypothesis that a sample is drawn from a population that follows a particular distribution.\n    For the Anderson-Darling test, the critical values depend on which distribution is being tested against.\n    This function works for normal, exponential, logistic, or Gumbel (Extreme Value Type I) distributions.",
  "parameters": [
    {
      "name": "select_return",
      "type": "This function has returns multiple objects ['statistic', 'critical_values', 'significance_level'].",
      "description": "Select the desired one to return.\nSee the respective function docs for descriptors."
    },
    {
      "name": "x",
      "type": "array_like",
      "description": "Array of sample data."
    },
    {
      "name": "dist",
      "type": "{'norm', 'expon', 'logistic', 'gumbel', 'gumbel_l', 'gumbel_r', 'extreme1'}",
      "description": "The type of distribution to test against.\nThe default is 'norm'.\nThe names 'extreme1', 'gumbel_l' and 'gumbel' are synonyms for the same distribution."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataContainer",
      "description": "type 'ordered pair', 'scalar', or 'matrix'"
    }
  ],
  "code": "from flojoy import OrderedPair, flojoy, Matrix, Scalar\nimport numpy as np\nfrom collections import namedtuple\nfrom typing import Literal\n\nimport scipy.stats\n\n\n@flojoy\ndef ANDERSON(\n    default: OrderedPair | Matrix,\n    dist: str = \"norm\",\n    select_return: Literal[\n        \"statistic\", \"critical_values\", \"significance_level\"\n    ] = \"statistic\",\n) -> OrderedPair | Matrix | Scalar:\n    \"\"\"The ANDERSON node is based on a numpy or scipy function.\n\n    The description of that function is as follows:\n\n        Anderson-Darling test for data coming from a particular distribution.\n\n        The Anderson-Darling test tests the null hypothesis that a sample is drawn from a population that follows a particular distribution.\n        For the Anderson-Darling test, the critical values depend on which distribution is being tested against.\n        This function works for normal, exponential, logistic, or Gumbel (Extreme Value Type I) distributions.\n\n    Parameters\n    ----------\n    select_return : This function has returns multiple objects ['statistic', 'critical_values', 'significance_level'].\n        Select the desired one to return.\n        See the respective function docs for descriptors.\n    x : array_like\n        Array of sample data.\n    dist : {'norm', 'expon', 'logistic', 'gumbel', 'gumbel_l', 'gumbel_r', 'extreme1'}, optional\n        The type of distribution to test against.\n        The default is 'norm'.\n        The names 'extreme1', 'gumbel_l' and 'gumbel' are synonyms for the same distribution.\n\n    Returns\n    -------\n    DataContainer\n        type 'ordered pair', 'scalar', or 'matrix'\n    \"\"\"\n\n    result = scipy.stats.anderson(\n        x=default.y,\n        dist=dist,\n    )\n\n    return_list = [\"statistic\", \"critical_values\", \"significance_level\"]\n    if isinstance(result, tuple):\n        res_dict = {}\n        num = min(len(result), len(return_list))\n        for i in range(num):\n            res_dict[return_list[i]] = result[i]\n        result = res_dict[select_return]\n    else:\n        result = result._asdict()\n        result = result[select_return]\n\n    if isinstance(result, np.ndarray):\n        result = OrderedPair(x=default.x, y=result)\n    else:\n        assert isinstance(\n            result, np.number | float | int\n        ), f\"Expected np.number, float or int for result, got {type(result)}\"\n        result = Scalar(c=float(result))\n\n    return result\n"
}