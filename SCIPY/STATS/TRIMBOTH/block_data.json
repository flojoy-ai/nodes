{
  "description": "The description of that function is as follows:\n\n    Slice off a proportion of items from both ends of an array.\n\n    Slice off the passed proportion of items from both ends of the passed array\n    (i.e., with 'proportiontocut' = 0.1, slices leftmost 10% and rightmost 10% of scores).\n    The trimmed values are the lowest and highest ones.\n    Slice off less if proportion results in a non-integer slice index (i.e. conservatively slices off 'proportiontocut').",
  "parameters": [
    {
      "name": "a",
      "type": "array_like",
      "description": "Data to trim."
    },
    {
      "name": "proportiontocut",
      "type": "float",
      "description": "Proportion (in range 0-1) of total data set to trim of each end."
    },
    {
      "name": "axis",
      "type": "int or None",
      "description": "Axis along which to trim data.\nDefault is 0.\nIf None, compute over the whole array 'a'."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataContainer",
      "description": "type 'ordered pair', 'scalar', or 'matrix'"
    }
  ],
  "code": "from flojoy import OrderedPair, flojoy, Matrix, Scalar\nimport numpy as np\nfrom collections import namedtuple\nfrom typing import Literal\n\nimport scipy.stats\n\n\n@flojoy\ndef TRIMBOTH(\n    default: OrderedPair | Matrix,\n    proportiontocut: float = 0.1,\n    axis: int = 0,\n) -> OrderedPair | Matrix | Scalar:\n    \"\"\"The TRIMBOTH node is based on a numpy or scipy function.\n\n    The description of that function is as follows:\n\n        Slice off a proportion of items from both ends of an array.\n\n        Slice off the passed proportion of items from both ends of the passed array\n        (i.e., with 'proportiontocut' = 0.1, slices leftmost 10% and rightmost 10% of scores).\n        The trimmed values are the lowest and highest ones.\n        Slice off less if proportion results in a non-integer slice index (i.e. conservatively slices off 'proportiontocut').\n\n    Parameters\n    ----------\n    a : array_like\n        Data to trim.\n    proportiontocut : float\n        Proportion (in range 0-1) of total data set to trim of each end.\n    axis : int or None, optional\n        Axis along which to trim data.\n        Default is 0.\n        If None, compute over the whole array 'a'.\n\n    Returns\n    -------\n    DataContainer\n        type 'ordered pair', 'scalar', or 'matrix'\n    \"\"\"\n\n    result = scipy.stats.trimboth(\n        a=default.y,\n        proportiontocut=proportiontocut,\n        axis=axis,\n    )\n\n    if isinstance(result, np.ndarray):\n        result = OrderedPair(x=default.x, y=result)\n    else:\n        assert isinstance(\n            result, np.number | float | int\n        ), f\"Expected np.number, float or int for result, got {type(result)}\"\n        result = Scalar(c=float(result))\n\n    return result\n"
}