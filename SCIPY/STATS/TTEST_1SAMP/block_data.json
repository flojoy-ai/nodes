{
  "description": "The description of that function is as follows:\n\n    Calculate the T-test for the mean of ONE group of scores.\n\n    This is a test for the null hypothesis that the expected value (mean) of a sample of independent observations 'a' is equal to the given population mean, 'popmean'.",
  "parameters": [
    {
      "name": "select_return",
      "type": "'statistic', 'pvalue'",
      "description": "Select the desired object to return.\nSee the respective function docs for descriptors."
    },
    {
      "name": "a",
      "type": "array_like",
      "description": "Sample observation."
    },
    {
      "name": "popmean",
      "type": "float or array_like",
      "description": "Expected value in null hypothesis.\nIf array_like, then it must have the same shape as 'a' excluding the axis dimension."
    },
    {
      "name": "axis",
      "type": "int or None",
      "description": "Axis along which to compute test.\nDefault is 0.\nIf None, compute over the whole array 'a'."
    },
    {
      "name": "nan_policy",
      "type": "{'propagate', 'raise', 'omit'}",
      "description": "Defines how to handle when input contains nan.\nThe following options are available (default is 'propagate'):\n'propagate' : returns nan\n'raise' : raises an error\n'omit' : performs the calculations ignoring nan values"
    },
    {
      "name": "alternative",
      "type": "{'two-sided', 'less', 'greater'}",
      "description": "Defines the alternative hypothesis.\nThe following options are available (default is 'two-sided'):\n'two-sided' : the mean of the underlying distribution of the sample\nis different than the given population mean (`popmean`)\n'less' : the mean of the underlying distribution of the sample is\nless than the given population mean (`popmean`)\n'greater' : the mean of the underlying distribution of the sample is\ngreater than the given population mean (`popmean`)"
    },
    {
      "name": ".. versionadded",
      "type": ": 1.6.0",
      "description": null
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataContainer",
      "description": "type 'ordered pair', 'scalar', or 'matrix'"
    }
  ],
  "code": "from flojoy import OrderedPair, flojoy, Matrix, Scalar\nimport numpy as np\nfrom collections import namedtuple\nfrom typing import Literal\n\nimport scipy.stats\n\n\n@flojoy\ndef TTEST_1SAMP(\n    default: OrderedPair | Matrix,\n    popmean: float = 0.1,\n    axis: int = 0,\n    nan_policy: str = \"propagate\",\n    alternative: str = \"two-sided\",\n    select_return: Literal[\"statistic\", \"pvalue\"] = \"statistic\",\n) -> OrderedPair | Matrix | Scalar:\n    \"\"\"The TTEST_1SAMP node is based on a numpy or scipy function.\n\n    The description of that function is as follows:\n\n        Calculate the T-test for the mean of ONE group of scores.\n\n        This is a test for the null hypothesis that the expected value (mean) of a sample of independent observations 'a' is equal to the given population mean, 'popmean'.\n\n    Parameters\n    ----------\n    select_return : 'statistic', 'pvalue'\n        Select the desired object to return.\n        See the respective function docs for descriptors.\n    a : array_like\n        Sample observation.\n    popmean : float or array_like\n        Expected value in null hypothesis.\n        If array_like, then it must have the same shape as 'a' excluding the axis dimension.\n    axis : int or None, optional\n        Axis along which to compute test.\n        Default is 0.\n        If None, compute over the whole array 'a'.\n    nan_policy : {'propagate', 'raise', 'omit'}, optional\n        Defines how to handle when input contains nan.\n        The following options are available (default is 'propagate'):\n        'propagate' : returns nan\n        'raise' : raises an error\n        'omit' : performs the calculations ignoring nan values\n    alternative : {'two-sided', 'less', 'greater'}, optional\n        Defines the alternative hypothesis.\n        The following options are available (default is 'two-sided'):\n        'two-sided' : the mean of the underlying distribution of the sample\n        is different than the given population mean (`popmean`)\n        'less' : the mean of the underlying distribution of the sample is\n        less than the given population mean (`popmean`)\n        'greater' : the mean of the underlying distribution of the sample is\n        greater than the given population mean (`popmean`)\n\n    .. versionadded:: 1.6.0\n\n    Returns\n    -------\n    DataContainer\n        type 'ordered pair', 'scalar', or 'matrix'\n    \"\"\"\n\n    result = scipy.stats.ttest_1samp(\n        a=default.y,\n        popmean=popmean,\n        axis=axis,\n        nan_policy=nan_policy,\n        alternative=alternative,\n    )\n\n    return_list = [\"statistic\", \"pvalue\"]\n    if isinstance(result, tuple):\n        res_dict = {}\n        num = min(len(result), len(return_list))\n        for i in range(num):\n            res_dict[return_list[i]] = result[i]\n        result = res_dict[select_return]\n    else:\n        result = result._asdict()\n        result = result[select_return]\n\n    if isinstance(result, np.ndarray):\n        result = OrderedPair(x=default.x, y=result)\n    else:\n        assert isinstance(\n            result, np.number | float | int\n        ), f\"Expected np.number, float or int for result, got {type(result)}\"\n        result = Scalar(c=float(result))\n\n    return result\n"
}