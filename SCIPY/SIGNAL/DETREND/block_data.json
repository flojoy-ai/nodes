{
  "description": "The description of that function is as follows:\n\n    Remove a linear trend along an axis from data.",
  "parameters": [
    {
      "name": "data",
      "type": "array_like",
      "description": "The input data."
    },
    {
      "name": "axis",
      "type": "int",
      "description": "The axis along which to detrend the data.\nBy default this is the last axis (-1)."
    },
    {
      "name": "type",
      "type": "{'linear', 'constant'}",
      "description": "The type of detrending. If type == 'linear' (default),\nthe result of a linear least-squares fit to 'data' is subtracted from 'data'.\nIf type == 'constant', only the mean of 'data' is subtracted."
    },
    {
      "name": "bp",
      "type": "array_like of ints",
      "description": "A sequence of break points. If given, an individual linear fit is\nperformed for each part of 'data' between two break points.\nBreak points are specified as indices into 'data'.\nThis parameter only has an effect when type == 'linear'."
    },
    {
      "name": "overwrite_data",
      "type": "bool",
      "description": "If True, perform in place detrending and avoid a copy.\nDefault is False."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataContainer",
      "description": "type 'ordered pair', 'scalar', or 'matrix'"
    }
  ],
  "code": "from flojoy import OrderedPair, flojoy, Matrix, Scalar\nimport numpy as np\nfrom collections import namedtuple\nfrom typing import Literal\n\nimport scipy.signal\n\n\n@flojoy\ndef DETREND(\n    default: OrderedPair | Matrix,\n    axis: int = -1,\n    type: str = \"linear\",\n    bp: int = 0,\n    overwrite_data: bool = False,\n) -> OrderedPair | Matrix | Scalar:\n    \"\"\"The DETREND node is based on a numpy or scipy function.\n\n    The description of that function is as follows:\n\n        Remove a linear trend along an axis from data.\n\n    Parameters\n    ----------\n    data : array_like\n        The input data.\n    axis : int, optional\n        The axis along which to detrend the data.\n        By default this is the last axis (-1).\n    type : {'linear', 'constant'}, optional\n        The type of detrending. If type == 'linear' (default),\n        the result of a linear least-squares fit to 'data' is subtracted from 'data'.\n        If type == 'constant', only the mean of 'data' is subtracted.\n    bp : array_like of ints, optional\n        A sequence of break points. If given, an individual linear fit is\n        performed for each part of 'data' between two break points.\n        Break points are specified as indices into 'data'.\n        This parameter only has an effect when type == 'linear'.\n    overwrite_data : bool, optional\n        If True, perform in place detrending and avoid a copy.\n        Default is False.\n\n    Returns\n    -------\n    DataContainer\n        type 'ordered pair', 'scalar', or 'matrix'\n    \"\"\"\n\n    result = scipy.signal.detrend(\n        data=default.y,\n        axis=axis,\n        type=type,\n        bp=bp,\n        overwrite_data=overwrite_data,\n    )\n\n    if isinstance(result, np.ndarray):\n        result = OrderedPair(x=default.x, y=result)\n    else:\n        assert isinstance(\n            result, np.number | float | int\n        ), f\"Expected np.number, float or int for result, got {type(result)}\"\n        result = Scalar(c=float(result))\n\n    return result\n"
}