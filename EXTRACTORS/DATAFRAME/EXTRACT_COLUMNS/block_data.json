{
  "description": "Inputs\n------\ndefault : DataFrame|Matrix\n    Input to use as the table for column extraction",
  "parameters": [
    {
      "name": "columns",
      "type": "list of str or list of int",
      "description": "The columns to extract from the input dataframe"
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataFrame|Matrix",
      "description": "DataFrame or Matrix with only the specified columns"
    }
  ],
  "code": "from flojoy import flojoy, DataFrame, Matrix, Array\nimport numpy as np\n\n\n@flojoy\ndef EXTRACT_COLUMNS(default: DataFrame | Matrix, columns: Array) -> DataFrame:\n    \"\"\"The EXTRACT_COLUMNS node takes an input dataframe/matrix and returns a dataframe/matrix with only the specified columns.\n\n    Inputs\n    ------\n    default : DataFrame|Matrix\n        Input to use as the table for column extraction\n\n    Parameters\n    ----------\n    columns : list of str or list of int\n        The columns to extract from the input dataframe\n\n    Returns\n    -------\n    DataFrame|Matrix\n        DataFrame or Matrix with only the specified columns\n    \"\"\"\n\n    if isinstance(default, DataFrame):\n        df = default.m\n        new_df = df[columns.unwrap()] if columns else df\n        return DataFrame(df=new_df)\n    else:\n        matrix = default.m\n        indices = np.array(columns.unwrap(), dtype=int)\n        new_matrix = matrix[:, indices] if columns else matrix\n        return Matrix(m=new_matrix)\n"
}