{
  "description": "The termination is set by the output, and the set termination\nin the oscilloscope must match that value.\n\nNote that the termination is often called the \"electrical impedance\".\nNote that the 75 Ohm option is not compatible with all model numbers.\n\nIf the \"VISA_address\" parameter is not specified the VISA_index will be\nused to find the address. The LIST_VISA node can be used to show the\nindicies of all available VISA instruments.\n\nThis node should also work with compatible Tektronix scopes (untested):\nMDO4xxx, MSO4xxx, and DPO4xxx.",
  "parameters": [
    {
      "name": "connection",
      "type": "VisaConnection",
      "description": "The VISA address (requires the CONNECTION_MDO3XXX node)."
    },
    {
      "name": "channel",
      "type": "int",
      "description": "The channel to query or set the impedance/termination."
    },
    {
      "name": "termination",
      "type": "str",
      "description": "The ohm to which the termination impedance is set to."
    },
    {
      "name": "query_set",
      "type": "str",
      "description": "Whether to query or set the triggering voltage."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataContainer",
      "description": "Scalar: The termination value for the chosen channel."
    }
  ],
  "code": "from flojoy import flojoy, DataContainer, Scalar, VisaConnection\nfrom typing import Optional, Literal\n\n\n@flojoy(inject_connection=True)\ndef TERMINATION_MDO3XXX(\n    connection: VisaConnection,\n    channel: int = 0,\n    termination: Literal[\"50 ohm\", \"75 ohm\", \"1M ohm\"] = \"50 ohm\",\n    query_set: Literal[\"query\", \"set\"] = \"query\",\n    default: Optional[DataContainer] = None,\n) -> Scalar:\n    \"\"\"The TERMINATION_MDO3XXX node sets the termination ohms (or queries it).\n\n    The termination is set by the output, and the set termination\n    in the oscilloscope must match that value.\n\n    Note that the termination is often called the \"electrical impedance\".\n    Note that the 75 Ohm option is not compatible with all model numbers.\n\n    If the \"VISA_address\" parameter is not specified the VISA_index will be\n    used to find the address. The LIST_VISA node can be used to show the\n    indicies of all available VISA instruments.\n\n    This node should also work with compatible Tektronix scopes (untested):\n    MDO4xxx, MSO4xxx, and DPO4xxx.\n\n    Parameters\n    ----------\n    connection: VisaConnection\n        The VISA address (requires the CONNECTION_MDO3XXX node).\n    channel: int\n        The channel to query or set the impedance/termination.\n    termination: str\n        The ohm to which the termination impedance is set to.\n    query_set: str\n        Whether to query or set the triggering voltage.\n\n    Returns\n    -------\n    DataContainer\n        Scalar: The termination value for the chosen channel.\n    \"\"\"\n\n    tek = connection.get_handle()\n\n    match termination:\n        case \"50 ohm\":\n            termination = 50\n        case \"75 ohm\":\n            termination = 75  # Not compatible with all instruments.\n        case \"1M ohm\":\n            termination = 1e6\n\n    match query_set:\n        case \"query\":\n            c = tek.channel[int(channel)].termination()\n        case \"set\":\n            tek.channel[int(channel)].termination(termination)\n            c = termination\n\n    return Scalar(c=c)\n"
}