{
  "description": "Inputs\n------\nip_address: TextBlob\n    The IP address of the robot arm.\n\nParameters\n------\nsimulator\n    Whether to activate the simulator or not. Defaults to False.",
  "parameters": [],
  "returns": [
    {
      "name": null,
      "type": "ip",
      "description": "The IP address of the robot arm."
    }
  ],
  "code": "from flojoy import flojoy, TextBlob\nfrom PYTHON.utils.mecademic_state.mecademic_state import query_for_handle\n\n\n@flojoy(deps={\"mecademicpy\": \"1.4.0\"})\ndef ACTIVATE(ip_address: TextBlob, simulator: bool = False) -> TextBlob:\n    \"\"\"\n    The ACTIVATE node activates the robot arm.\n\n    Inputs\n    ------\n    ip_address: TextBlob\n        The IP address of the robot arm.\n\n    Parameters\n    ------\n    simulator\n        Whether to activate the simulator or not. Defaults to False.\n\n    Returns\n    -------\n    ip\n        The IP address of the robot arm.\n\n    \"\"\"\n    handle = query_for_handle(ip_address)\n    if simulator:\n        handle.ActivateSim()\n    else:\n        handle.ActivateRobot()\n    handle.WaitActivated()\n    return ip_address\n"
}