{
  "description": null,
  "parameters": [
    {
      "name": "baudrate",
      "type": "int",
      "description": "Baud rate for the serial communication."
    },
    {
      "name": "comport",
      "type": "string",
      "description": "Defines the comunication port on which the serial device is connected."
    }
  ],
  "returns": [],
  "code": "from flojoy import SerialDevice, flojoy, OrderedPair\nfrom typing import Optional\nimport serial\nimport numpy as np\n\n\n@flojoy(deps={\"pyserial\": \"3.5\"})\ndef SERIAL_SINGLE_MEASUREMENT(\n    device: SerialDevice,\n    default: Optional[OrderedPair] = None,\n    baudrate: int = 9600,\n) -> OrderedPair:\n    \"\"\"The SERIAL_SINGLE_MEASUREMENT node takes a single reading of data from an Arduino or a similar serial device.\n\n    Parameters\n    ----------\n    baudrate : int\n        Baud rate for the serial communication.\n    comport : string\n        Defines the comunication port on which the serial device is connected.\n    \"\"\"\n\n    ser = serial.Serial(device.port, timeout=1, baudrate=baudrate)\n    s = \"\"\n    while s == \"\":\n        s = ser.readline().decode()\n\n    reading = s[:-2].split(\",\")\n    reading = np.array(reading)  # Create an array\n    reading = reading.astype(\"float64\")  # Convert the array to float\n    x = np.arange(0, reading.size)  # Create a second array\n\n    return OrderedPair(x=x, y=reading)\n"
}