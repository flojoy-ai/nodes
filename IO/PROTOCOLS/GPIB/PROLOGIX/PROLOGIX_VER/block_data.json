{
  "description": "Inputs\n------\ndefault: DataContainer\n    Any DataContainer - likely connected to the output of the OPEN_SERIAL node.",
  "parameters": [
    {
      "name": "connection",
      "type": "Serial",
      "description": "The open serial connection with the instrument."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "TextBlob",
      "description": "The Prologix controller available commands."
    }
  ],
  "code": "import serial, traceback\nfrom flojoy import flojoy, SerialConnection, TextBlob, DataContainer\nfrom typing import cast, Optional\n\n\n@flojoy(deps={\"pyserial\": \"3.5\"}, inject_connection=True)\ndef PROLOGIX_VER(\n    connection: SerialConnection,\n    default: Optional[DataContainer] = None,\n) -> TextBlob:\n    \"\"\"The PROLOGIX_VER command queries the Prologix USB-to-GPIB firmware version.\n\n    Inputs\n    ------\n    default: DataContainer\n        Any DataContainer - likely connected to the output of the OPEN_SERIAL node.\n\n    Parameters\n    ----------\n    connection: Serial\n        The open serial connection with the instrument.\n\n    Returns\n    -------\n    TextBlob\n        The Prologix controller available commands.\n    \"\"\"\n\n    try:\n        # Start serial communication with the instrument\n        ser = cast(serial.Serial, connection.get_handle())\n        if ser is None:\n            raise ValueError(\"Serial communication is not open\")\n        ser.write(b\"++ver\\r\\n\")\n        s = ser.read(1000).decode()\n    except:\n        s = traceback.format_exc()\n\n    return TextBlob(s)\n"
}