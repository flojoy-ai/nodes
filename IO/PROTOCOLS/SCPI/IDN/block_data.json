{
  "description": "Inputs\n------\ndefault: DataContainer\n    Any DataContainer - likely connected to the output of the OPEN_SERIAL node.",
  "parameters": [
    {
      "name": "connection",
      "type": "Serial",
      "description": "The open connection with the device receiving the *IDN? SCPI command."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "TextBlob",
      "description": "The result of the *IDN? SCPI command."
    }
  ],
  "code": "import serial\nfrom flojoy import flojoy, SerialConnection, TextBlob, DataContainer\nfrom typing import cast, Optional\n\n\n@flojoy(deps={\"pyserial\": \"3.5\"}, inject_connection=True)\ndef IDN(\n    connection: SerialConnection, default: Optional[DataContainer] = None\n) -> TextBlob:\n    \"\"\"The IDN node queries a device's identity through the universal *IDN? SCPI command.\n\n    Inputs\n    ------\n    default: DataContainer\n        Any DataContainer - likely connected to the output of the OPEN_SERIAL node.\n\n    Parameters\n    ----------\n    connection: Serial\n        The open connection with the device receiving the *IDN? SCPI command.\n\n    Returns\n    -------\n    TextBlob\n        The result of the *IDN? SCPI command.\n    \"\"\"\n\n    # Start serial communication with the instrument\n    ser = cast(serial.Serial, connection.get_handle())\n\n    if ser is None:\n        raise ValueError(\"Serial communication is not open\")\n\n    ser.write(\"*IDN?\\n\".encode())\n\n    return TextBlob(text_blob=ser.readline().decode())\n"
}