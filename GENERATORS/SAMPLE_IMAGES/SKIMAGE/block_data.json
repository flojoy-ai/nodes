{
  "description": "Examples can be found here:\nhttps://scikit-image.org/docs/stable/auto_examples/index.html",
  "parameters": [
    {
      "name": "img_key",
      "type": "str",
      "description": "The name of the image to be loaded from scikit-image."
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "Image",
      "description": "DataContainer containing the image loaded from scikit-image."
    }
  ],
  "code": "from flojoy import flojoy, Image\nfrom skimage import data\nfrom typing import Literal\n\n\n@flojoy(deps={\"scikit-image\": \"0.21.0\"})\ndef SKIMAGE(\n    img_key: Literal[\n        \"astronaut\",\n        \"binary_blobs\",\n        \"brain\",\n        \"brick\",\n        \"camera\",\n        \"cat\",\n        \"cell\",\n        \"cells3d\",\n        \"checkerboard\",\n        \"chelsea\",\n        \"clock\",\n        \"coffee\",\n        \"coins\",\n        \"colorwheel\",\n        \"create_image_fetcher\",\n        \"data_dir\",\n        \"download_all\",\n        \"eagle\",\n        \"file_hash\",\n        \"grass\",\n        \"gravel\",\n        \"horse\",\n        \"hubble_deep_field\",\n        \"human_mitosis\",\n        \"image_fetcher\",\n        \"immunohistochemistry\",\n        \"kidney\",\n        \"lbp_frontal_face_cascade_filename\",\n        \"lfw_subset\",\n        \"lily\",\n        \"logo\",\n        \"microaneurysms\",\n        \"moon\",\n        \"nickel_solidification\",\n        \"page\",\n        \"protein_transport\",\n        \"retina\",\n        \"rocket\",\n        \"shepp_logan_phantom\",\n        \"skin\",\n        \"stereo_motorcycle\",\n        \"text\",\n        \"vortex\",\n    ] = \"astronaut\"\n) -> Image:\n    \"\"\"The SKIMAGE node is designed to load example images from 'scikit-image'.\n\n    Examples can be found here:\n    https://scikit-image.org/docs/stable/auto_examples/index.html\n\n    Parameters\n    ----------\n    img_key : str\n        The name of the image to be loaded from scikit-image.\n\n    Returns\n    -------\n    Image\n        DataContainer containing the image loaded from scikit-image.\n    \"\"\"\n\n    img_array = getattr(data, img_key)()\n\n    if len(img_array.shape) == 2:\n        red = green = blue = img_array\n        alpha = None\n    elif len(img_array.shape) == 3:\n        # Color image\n        if img_array.shape[2] == 3:\n            red, green, blue = (\n                img_array[:, :, 0],\n                img_array[:, :, 1],\n                img_array[:, :, 2],\n            )\n            alpha = None\n        elif img_array.shape[2] == 4:\n            red, green, blue, alpha = (\n                img_array[:, :, 0],\n                img_array[:, :, 1],\n                img_array[:, :, 2],\n                img_array[:, :, 3],\n            )\n\n    return Image(\n        r=red,\n        g=green,\n        b=blue,\n        a=alpha,\n    )\n"
}