{
  "description": "'sklearn.datasets', using the provided dataset_key parameter, and returns\nit wrapped in a DataContainer.",
  "parameters": [
    {
      "name": "dataset_name",
      "type": "str",
      "description": null
    }
  ],
  "returns": [
    {
      "name": null,
      "type": "DataFrame",
      "description": "A DataContainer object containing the retrieved pandas DataFrame."
    }
  ],
  "code": "from typing import Literal\n\nfrom flojoy import DataFrame, flojoy\n\n\n@flojoy()\ndef SCIKIT_LEARN_DATASET(\n    dataset_name: Literal[\n        \"iris\", \"diabetes\", \"digits\", \"linnerud\", \"wine\", \"breast_cancer\"\n    ] = \"iris\"\n) -> DataFrame:\n    \"\"\"The SCIKIT_LEARN_DATASET node retrieves a pandas DataFrame from\n    'sklearn.datasets', using the provided dataset_key parameter, and returns\n    it wrapped in a DataContainer.\n\n    Parameters\n    ----------\n    dataset_name : str\n\n    Returns\n    -------\n    DataFrame\n        A DataContainer object containing the retrieved pandas DataFrame.\n    \"\"\"\n\n    if dataset_name == \"iris\":\n        from sklearn.datasets import load_iris\n\n        iris = load_iris(as_frame=True, return_X_y=True)\n        return DataFrame(df=iris[0])  # type: ignore\n\n    elif dataset_name == \"diabetes\":\n        from sklearn.datasets import load_diabetes\n\n        iris = load_diabetes(as_frame=True, return_X_y=True)\n        return DataFrame(df=iris[0])  # type: ignore\n\n    elif dataset_name == \"digits\":\n        from sklearn.datasets import load_digits\n\n        iris = load_digits(as_frame=True, return_X_y=True)\n        return DataFrame(df=iris[0])  # type: ignore\n\n    elif dataset_name == \"linnerud\":\n        from sklearn.datasets import load_linnerud\n\n        iris = load_linnerud(as_frame=True, return_X_y=True)\n        return DataFrame(df=iris[0])  # type: ignore\n\n    elif dataset_name == \"wine\":\n        from sklearn.datasets import load_wine\n\n        iris = load_wine(as_frame=True, return_X_y=True)\n        return DataFrame(df=iris[0])  # type: ignore\n\n    elif dataset_name == \"breast_cancer\":\n        from sklearn.datasets import load_breast_cancer\n\n        iris = load_breast_cancer(as_frame=True, return_X_y=True)\n        return DataFrame(df=iris[0])  # type: ignore\n\n    else:\n        raise ValueError(f\"Failed to retrieve '{dataset_name}' from rdatasets package!\")\n"
}