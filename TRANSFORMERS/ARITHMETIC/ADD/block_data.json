{
  "description": "When a constant is added to an array or matrix, each element in the array or matrix will be increased by the constant value.\n\nIf two arrays or matrices of different sizes are added, the output will be the size of the larger array or matrix with only the overlapping elements changed.\n\nInputs\n------\na : OrderedPair|Scalar|Vector\n    The input a use to compute the sum of a and b.\nb : OrderedPair|Scalar|Vector\n    The input b use to compute the sum of a and b.",
  "parameters": [],
  "returns": [
    {
      "name": null,
      "type": "OrderedPair|Scalar|Vector",
      "description": "OrderedPair if a is an OrderedPair.\nx: the x-axis of input a.\ny: the sum of input a and input b.\n\nScalar if a is a Scalar.\nc: the sum of input a and input b.\n\nVector if a is a Vector.\nv: the sum of input a and input b."
    }
  ],
  "code": "import numpy as np\nfrom flojoy import flojoy, OrderedPair, Scalar, Vector\nfrom nodes.TRANSFORMERS.ARITHMETIC.utils.arithmetic_utils import get_val\nfrom functools import reduce\n\n\n@flojoy\ndef ADD(\n    a: OrderedPair | Scalar | Vector, b: list[OrderedPair | Scalar | Vector]\n) -> OrderedPair | Scalar | Vector:\n    \"\"\"The ADD node adds two or more numeric arrays, matrices, dataframes, or constants element-wise.\n\n    When a constant is added to an array or matrix, each element in the array or matrix will be increased by the constant value.\n\n    If two arrays or matrices of different sizes are added, the output will be the size of the larger array or matrix with only the overlapping elements changed.\n\n    Inputs\n    ------\n    a : OrderedPair|Scalar|Vector\n        The input a use to compute the sum of a and b.\n    b : OrderedPair|Scalar|Vector\n        The input b use to compute the sum of a and b.\n\n    Returns\n    -------\n    OrderedPair|Scalar|Vector\n        OrderedPair if a is an OrderedPair.\n        x: the x-axis of input a.\n        y: the sum of input a and input b.\n\n        Scalar if a is a Scalar.\n        c: the sum of input a and input b.\n\n        Vector if a is a Vector.\n        v: the sum of input a and input b.\n    \"\"\"\n\n    initial = get_val(a)\n    seq = map(lambda dc: get_val(dc), b)\n    y = reduce(lambda u, v: np.add(u, v), seq, initial)\n\n    match a:\n        case OrderedPair():\n            return OrderedPair(x=a.x, y=y)\n        case Vector():\n            return Vector(v=y)\n        case Scalar():\n            return Scalar(c=y)\n"
}